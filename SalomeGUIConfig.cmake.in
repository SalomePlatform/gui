# Copyright (C) 2013-2024  CEA, EDF, OPEN CASCADE
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
#

# - Config file for the @PROJECT_NAME@ package
# It defines the following variables. 
# Specific to the pacakge @PROJECT_NAME@ itself:
#  @PROJECT_NAME_UC@_ROOT_DIR_EXP - the root path of the installation providing this CMake file
#

### Initialisation performed by CONFIGURE_PACKAGE_CONFIG_FILE:
@PACKAGE_INIT@

# Load the dependencies for the libraries of @PROJECT_NAME@ 
# (contains definitions for IMPORTED targets). This is only 
# imported if we are not built as a subproject (in this case targets are already there)
IF(NOT TARGET Event AND NOT @PROJECT_NAME@_BINARY_DIR)
  INCLUDE("@PACKAGE_SALOME_INSTALL_CMAKE_LOCAL@/@PROJECT_NAME@Targets.cmake")
ENDIF()   

# Package root dir:
SET_AND_CHECK(GUI_ROOT_DIR_EXP "@PACKAGE_CMAKE_INSTALL_PREFIX@")

# Include directories
SET_AND_CHECK(GUI_INCLUDE_DIRS "${GUI_ROOT_DIR_EXP}/@SALOME_INSTALL_HEADERS@")
SET(GUI_INCLUDE_DIRS "${GUI_INCLUDE_DIRS};@_SalomeGUI_EXTRA_HEADERS@")
SET(GUI_DEFINITIONS "@KERNEL_DEFINITIONS@")

# Package specific environment variables
@_SalomeGUI_EXTRA_ENV_FULL@

#### Now the specificities

# Options exported by the package:
SET(SALOME_GUI_BUILD_DOC      @SALOME_BUILD_DOC@)
SET(SALOME_GUI_BUILD_TESTS    @SALOME_BUILD_TESTS@)
SET(SALOME_GUI_LIGHT_ONLY     @SALOME_LIGHT_ONLY@)

# Advanced options
SET(SALOME_USE_OCCVIEWER      @SALOME_USE_OCCVIEWER@)
SET(SALOME_USE_GLVIEWER       @SALOME_USE_GLVIEWER@)
SET(SALOME_USE_VTKVIEWER      @SALOME_USE_VTKVIEWER@)
SET(SALOME_USE_PV3DVIEWER     @SALOME_USE_PV3DVIEWER@)
SET(SALOME_USE_PLOT2DVIEWER   @SALOME_USE_PLOT2DVIEWER@)
SET(SALOME_USE_GRAPHICSVIEW   @SALOME_USE_GRAPHICSVIEW@)
SET(SALOME_USE_QTVIEWER       @SALOME_USE_QTVIEWER@)
SET(SALOME_USE_QXGRAPHVIEWER  @SALOME_USE_QXGRAPHVIEWER@)
SET(SALOME_USE_PVVIEWER       @SALOME_USE_PVVIEWER@)
SET(SALOME_USE_PYVIEWER       @SALOME_USE_PYVIEWER@)
SET(SALOME_USE_PYCONSOLE      @SALOME_USE_PYCONSOLE@)
SET(SALOME_USE_SALOMEOBJECT   @SALOME_USE_SALOMEOBJECT@)
SET(SALOME_GUI_USE_OBSERVERS  @SALOME_GUI_USE_OBSERVERS@)
SET(SALOME_GUI_USE_OPENGL2    @SALOME_GUI_USE_OPENGL2@)
SET(SALOME_ON_DEMAND          @SALOME_ON_DEMAND@)

IF(SALOME_ON_DEMAND)
  LIST(APPEND GUI_DEFINITIONS "-DWITH_SALOME_ON_DEMAND")
ENDIF()
IF(SALOME_GUI_LIGHT_ONLY)
  LIST(APPEND GUI_DEFINITIONS "-DGUI_DISABLE_CORBA")
ENDIF() 
IF(SALOME_GUI_USE_OBSERVERS)
  LIST(APPEND GUI_DEFINITIONS "-DWITH_SALOMEDS_OBSERVER")
ENDIF()
IF(NOT SALOME_USE_OCCVIEWER)
  LIST(APPEND GUI_DEFINITIONS "-DDISABLE_OCCVIEWER")
ENDIF()
IF(NOT SALOME_USE_PV3DVIEWER)
  LIST(APPEND GUI_DEFINITIONS "-DDISABLE_PV3DVIEWER")
ENDIF()
IF(NOT SALOME_USE_GLVIEWER)
  LIST(APPEND GUI_DEFINITIONS "-DDISABLE_GLVIEWER")
ENDIF()

IF(NOT SALOME_USE_VTKVIEWER)
  LIST(APPEND GUI_DEFINITIONS "-DDISABLE_VTKVIEWER")
ELSE()
  IF(SALOME_GUI_USE_OPENGL2)
    LIST(APPEND GUI_DEFINITIONS "-DVTK_OPENGL2")
  ENDIF()
ENDIF()
IF(NOT SALOME_USE_PLOT2DVIEWER)
  LIST(APPEND GUI_DEFINITIONS "-DDISABLE_PLOT2DVIEWER")
ENDIF()
IF (NOT SALOME_USE_GRAPHICSVIEW)
  LIST(APPEND GUI_DEFINITIONS "-DDISABLE_GRAPHICSVIEW")
ENDIF()
IF (NOT SALOME_USE_QTVIEWER)
  LIST(APPEND GUI_DEFINITIONS "-DDISABLE_QTVIEWER")
ENDIF()
IF (NOT SALOME_USE_PVVIEWER)
  LIST(APPEND GUI_DEFINITIONS "-DDISABLE_PVVIEWER")
ENDIF()
IF(NOT SALOME_USE_PYVIEWER)
  LIST(APPEND GUI_DEFINITIONS "-DDISABLE_PYVIEWER")
ENDIF()
IF(NOT SALOME_USE_PYCONSOLE)
  LIST(APPEND GUI_DEFINITIONS "-DDISABLE_PYCONSOLE")
ENDIF()
IF(NOT SALOME_USE_QXGRAPHVIEWER)
  LIST(APPEND GUI_DEFINITIONS "-DDISABLE_QXGRAPHVIEWER")
ENDIF()
IF(NOT SALOME_USE_SALOMEOBJECT)
  LIST(APPEND GUI_DEFINITIONS "-DDISABLE_SALOMEOBJECT")
ENDIF()

# Level 1 prerequisites:
SET_AND_CHECK(KERNEL_ROOT_DIR_EXP "@PACKAGE_KERNEL_ROOT_DIR@")
SET_AND_CHECK(SIP_ROOT_DIR_EXP "@PACKAGE_SIP_ROOT_DIR@")
SET_AND_CHECK(QT5_ROOT_DIR_EXP "@PACKAGE_QT_ROOT_DIR@")
SET_AND_CHECK(PYQT5_ROOT_DIR_EXP "@PACKAGE_PYQT_ROOT_DIR@")
SET_AND_CHECK(OPENCASCADE_ROOT_DIR_EXP "@PACKAGE_OPENCASCADE_ROOT_DIR@")

# Optional level 1 prerequisites:
IF(SALOME_USE_GLVIEWER)
  SET_AND_CHECK(OPENGL_ROOT_DIR_EXP "@PACKAGE_OPENGL_ROOT_DIR@") 
ENDIF()
IF(SALOME_USE_VTKVIEWER)
  SET_AND_CHECK(VTK_ROOT_DIR_EXP "@PACKAGE_VTK_ROOT_DIR@")
ENDIF()
IF(SALOME_USE_PLOT2DVIEWER)
  SET_AND_CHECK(QWT_ROOT_DIR_EXP "@PACKAGE_QWT_ROOT_DIR@")
ENDIF()

# For all prerequisites, load the corresponding targets if the package was used
# in CONFIG mode. This ensures dependent projects link correctly
# without having to set LD_LIBRARY_PATH:
SET(_PREREQ_@PROJECT_NAME@ @_PREREQ_LIST@)
SET(_PREREQ_@PROJECT_NAME@_CONFIG_DIR @_PREREQ_DIR_LIST@)
SET(_PREREQ_@PROJECT_NAME@_COMPONENTS "@_PREREQ_COMPO_LIST@")
LIST(LENGTH _PREREQ_@PROJECT_NAME@_CONFIG_DIR _list_len_@PROJECT_NAME@)
IF(NOT _list_len_@PROJECT_NAME@ EQUAL 0)
  # Another CMake stupidity - FOREACH(... RANGE r) generates r+1 numbers ...
  MATH(EXPR _range_@PROJECT_NAME@ "${_list_len_@PROJECT_NAME@}-1")
  FOREACH(_p_@PROJECT_NAME@ RANGE ${_range_@PROJECT_NAME@})
    LIST(GET _PREREQ_@PROJECT_NAME@            ${_p_@PROJECT_NAME@} _pkg_@PROJECT_NAME@    )
    LIST(GET _PREREQ_@PROJECT_NAME@_CONFIG_DIR ${_p_@PROJECT_NAME@} _pkg_dir_@PROJECT_NAME@)
    LIST(GET _PREREQ_@PROJECT_NAME@_COMPONENTS ${_p_@PROJECT_NAME@} _pkg_compo_@PROJECT_NAME@)
    IF(NOT OMIT_DETECT_PACKAGE_${_pkg_@PROJECT_NAME@})
      MESSAGE(STATUS "===> Reloading targets from ${_pkg_@PROJECT_NAME@} ...")
      IF(NOT _pkg_compo_@PROJECT_NAME@)
        FIND_PACKAGE(${_pkg_@PROJECT_NAME@} REQUIRED NO_MODULE
            PATHS "${_pkg_dir_@PROJECT_NAME@}"
            NO_DEFAULT_PATH)
      ELSE()
        STRING(REPLACE "," ";" _compo_lst_@PROJECT_NAME@ "${_pkg_compo_@PROJECT_NAME@}")
        MESSAGE(STATUS "===> (components: ${_pkg_compo_@PROJECT_NAME@})")
        FIND_PACKAGE(${_pkg_@PROJECT_NAME@} REQUIRED NO_MODULE
            COMPONENTS ${_compo_lst_@PROJECT_NAME@}
            PATHS "${_pkg_dir_@PROJECT_NAME@}"
            NO_DEFAULT_PATH)
      ENDIF()
    ENDIF()
  ENDFOREACH()
ENDIF()

# Installation directories
SET(SALOME_INSTALL_BINS "@SALOME_INSTALL_BINS@")
SET(SALOME_INSTALL_LIBS "@SALOME_INSTALL_LIBS@")
SET(SALOME_INSTALL_IDLS "@SALOME_INSTALL_IDLS@")
SET(SALOME_INSTALL_HEADERS "@SALOME_INSTALL_HEADERS@")
SET(SALOME_INSTALL_SCRIPT_SCRIPTS "@SALOME_INSTALL_SCRIPT_SCRIPTS@")
SET(SALOME_INSTALL_SCRIPT_DATA "@SALOME_INSTALL_SCRIPT_DATA@")
SET(SALOME_INSTALL_SCRIPT_PYTHON "@SALOME_INSTALL_SCRIPT_PYTHON@")
SET(SALOME_INSTALL_APPLISKEL_SCRIPTS "@SALOME_INSTALL_APPLISKEL_SCRIPTS@")
SET(SALOME_INSTALL_APPLISKEL_PYTHON "@SALOME_INSTALL_APPLISKEL_PYTHON@") 
SET(SALOME_INSTALL_CMAKE "@SALOME_INSTALL_CMAKE@")
SET(SALOME_INSTALL_CMAKE_LOCAL "@SALOME_INSTALL_CMAKE_LOCAL@")
SET(SALOME_INSTALL_PYTHON "@SALOME_INSTALL_PYTHON@")
SET(SALOME_INSTALL_PYTHON_SHARED "@SALOME_INSTALL_PYTHON_SHARED@")
SET(SALOME_INSTALL_RES "@SALOME_INSTALL_RES@")
SET(SALOME_INSTALL_DOC "@SALOME_INSTALL_DOC@")
SET(SALOME_INSTALL_AMCONFIG_LOCAL "@SALOME_INSTALL_AMCONFIG_LOCAL@")

# Include KERNEL targets if they were not already loaded:
IF(NOT (TARGET SALOMEBasics)) 
  INCLUDE("${KERNEL_ROOT_DIR_EXP}/${SALOME_INSTALL_CMAKE}/SalomeKERNELTargets.cmake")
ENDIF()

# Exposed GUI targets:
SET(GUI_caf caf)
SET(GUI_CAM CAM)
SET(GUI_CASCatch CASCatch)
SET(GUI_DDS DDS)
SET(GUI_Event Event)
SET(GUI_GLViewer GLViewer)
SET(GUI_LightApp LightApp)
SET(GUI_LogWindow LogWindow)
SET(GUI_ObjBrowser ObjBrowser)
SET(GUI_OCCViewer OCCViewer)
SET(GUI_OpenGLUtils OpenGLUtils)
SET(GUI_Plot2d Plot2d)
SET(GUI_PyConsole PyConsole)
SET(GUI_PyInterp PyInterp)
SET(GUI_PyEditor PyEditor)
SET(GUI_PyViewer PyViewer)
SET(GUI_QDS QDS)
SET(GUI_qtx qtx)
SET(GUI_QxScene QxScene)
SET(GUI_SalomeApp SalomeApp)
SET(GUI_SalomeAppSL SalomeAppSL)
SET(GUI_SalomeAppImpl SalomeAppImpl)
SET(GUI_SalomeIDLGUI SalomeIDLGUI)
SET(GUI_SalomeObject SalomeObject)
SET(GUI_SalomePrs SalomePrs)
SET(GUI_SalomePyQtGUILight SalomePyQtGUILight)
SET(GUI_SalomePyQtGUI SalomePyQtGUI)
SET(GUI_SalomePyQt SalomePyQt)
SET(GUI_SalomePy SalomePy)
SET(GUI_SalomeSession SalomeSession)
SET(GUI_SalomeStyle SalomeStyle)
SET(GUI_SOCC SOCC)
SET(GUI_SPV3D SPV3D)
SET(GUI_SPlot2d SPlot2d)
SET(GUI_std std)
SET(GUI_SUITApp SUITApp)
SET(GUI_suit suit)
SET(GUI_SVTK SVTK)
SET(GUI_ToolsGUI ToolsGUI)
SET(GUI_ViewerTools ViewerTools)
SET(GUI_ViewerData ViewerData)
SET(GUI_VTKViewer VTKViewer)
SET(GUI_PV3DViewer PV3DViewer)
SET(GUI_PVViewer PVViewer)
SET(GUI_PVServerService PVServerService)
SET(GUI_vtkTools vtkTools)
SET(GUI_SalomeGuiHelpers SalomeGuiHelpers)
SET(GUI_SalomeTreeData SalomeTreeData)
SET(GUI_ImageComposer ImageComposer)
SET(GUI_GraphicsView GraphicsView)
